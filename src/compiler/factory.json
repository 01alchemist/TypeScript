[
    {
        "type": "LiteralExpression",
        "baseType": "LeftHandSideExpression"
    },
    {
        "kind": "StringLiteral",
        "type": "StringLiteralExpression",
        "baseType": "LiteralExpression",
        "children": [
            { "name": "text", "type": "string" }
        ]
    },
    {
        "kind": "NumericLiteral",
        "baseType": "LiteralExpression",
        "children": [
            { "name": "text", "paramName": "value", "type": "number | string", "converter": "String" }
        ]
    },
    {
        "kind": "RegularExpressionLiteral",
        "baseType": "LiteralExpression"
    },
    {
        "kind": "NoSubstitutionTemplateLiteral",
        "baseType": "LiteralExpression"
    },
    {
        "kind": "TemplateHead",
        "baseType": "LiteralExpression"
    },
    {
        "kind": "TemplateMiddle",
        "baseType": "LiteralExpression"
    },
    {
        "kind": "TemplateTail",
        "baseType": "LiteralExpression"
    },
    {
        "kind": "Identifier",
        "type": "Identifier",
        "baseType": "LeftHandSideExpression",
        "children": [
            { "name": "text", "type": "string" }
        ]
    },
    {
        "type": "DeclarationName",
        "types": "Identifier | LiteralExpression | ComputedPropertyName | BindingPattern"
    },
    {
        "type": "EntityName",
        "types": "Identifier | QualifiedName"
    },
    {
        "kind": "ThisKeyword",
        "baseType": "LeftHandSideExpression"
    },
    {
        "kind": "SuperKeyword",
        "baseType": "LeftHandSideExpression"
    },
    {
        "kind": "NullKeyword",
        "baseType": "LeftHandSideExpression"
    },
    {
        "kind": "TrueKeyword",
        "baseType": "LeftHandSideExpression"
    },
    {
        "kind": "FalseKeyword",
        "baseType": "LeftHandSideExpression"
    },

    {
        "type": "QualifiedName",
        "kind": "QualifiedName",
        "create": true,
        "update": true,
        "children": [
            { "name": "left", "type": "EntityName", "visit": true },
            { "name": "right", "type": "Identifier", "visit": true }
        ]
    },
    {
        "type": "ComputedPropertyName",
        "kind": "ComputedPropertyName",
        "handlerType": "DeclarationName",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "children": [
            { "name": "expression", "type": "Expression", "visit": true }
        ]
    },
    {
        "kind": "TypeParameter",
        "type": "TypeParameterDeclaration",
        "create": true,
        "update": true,
        "children": [
            { "name": "name", "type": "Identifier" },
            { "name": "constraint", "type": "TypeNode", "optional": true },
            { "name": "expression", "type": "Expression", "optional": true, "readonly": true }
        ]
    },

    {
        "name": "ParameterDeclaration",
        "kind": "Parameter",
        "type": "ParameterDeclaration",
        "create": true,
        "update": true,
        "modifiers": true,
        "children": [
            { "name": "name", "type": "Identifier | BindingPattern" },
            { "name": "initializer", "type": "Expression", "optional": "true" },
            { "name": "type", "type": "TypeNode", "optional": "true" },
            { "name": "modifiers", "type": "Node", "optional": "true", "isModifiersArray": true, "readonly": true },
            { "name": "dotDotDotToken", "type": "Node", "optional": "true", "readonly": true },
            { "name": "questionToken", "type": "Node", "optional": "true", "readonly": true }
        ]
    },

    {
        "kind": "PropertySignature",
        "type": "PropertyDeclaration",
        "create": true,
        "update": true,
        "children": [
            { "name": "name", "type": "DeclarationName" },
            { "name": "type", "type": "TypeNode", "optional": "true" },
            { "name": "questionToken", "type": "Node", "optional": "true", "readonly": true }
        ]
    },
    {
        "kind": "PropertyDeclaration",
        "type": "PropertyDeclaration",
        "create": true,
        "update": true,
        "children": [
            { "name": "name", "type": "DeclarationName" },
            { "name": "initializer", "type": "Expression", "optional": "true" },
            { "name": "type", "type": "TypeNode", "optional": "true" },
            { "name": "questionToken", "type": "Node", "optional": "true", "readonly": true }
        ]
    },

    {
        "kind": "MethodSignature",
        "type": "MethodDeclaration",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "name", "type": "DeclarationName" },
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": true, "isModifiersArray": true, "readonly": true },
            { "name": "asteriskToken", "type": "Node", "optional": true, "readonly": true },
            { "name": "questionToken", "type": "Node", "optional": true, "readonly": true }
        ]
    },
    {
        "kind": "MethodDeclaration",
        "type": "MethodDeclaration",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "name", "type": "DeclarationName" },
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "body", "type": "Block" },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": true, "isModifiersArray": true, "readonly": true },
            { "name": "asteriskToken", "type": "Node", "optional": true, "readonly": true }
        ]
    },
    {
        "kind": "Constructor",
        "type": "ConstructorDeclaration",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "body", "type": "Block" },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": true, "isModifiersArray": true, "readonly": true }
        ]
    },
    {
        "kind": "GetAccessor",
        "type": "AccessorDeclaration",
        "baseType": "ObjectLiteralElement",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "name", "type": "DeclarationName" },
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "body", "type": "Block" },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": "true", "isModifiersArray": true, "readonly": true }
        ]
    },
    {
        "kind": "SetAccessor",
        "type": "AccessorDeclaration",
        "baseType": "ObjectLiteralElement",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "name", "type": "DeclarationName" },
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "body", "type": "Block" },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": "true", "isModifiersArray": true, "readonly": true }
        ]
    },
    {
        "kind": "CallSignature",
        "type": "SignatureDeclaration",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": "true", "isModifiersArray": true, "readonly": true }
        ]
    },
    {
        "kind": "ConstructSignature",
        "type": "SignatureDeclaration",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": "true", "isModifiersArray": true, "readonly": true }
        ]
    },
    {
        "kind": "IndexSignature",
        "type": "IndexSignatureDeclaration",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": "true", "isModifiersArray": true, "readonly": true }
        ]
    },

    {
        "type": "TypeNode"
    },

    {
        "kind": "TypeReference",
        "type": "TypeReferenceNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "FunctionType",
        "type": "FunctionOrConstructorTypeNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "ConstructorType",
        "type": "FunctionOrConstructorTypeNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "TypeQuery",
        "type": "TypeQueryNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "TypeLiteral",
        "type": "TypeLiteralNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "ArrayType",
        "type": "ArrayTypeNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "TupleType",
        "type": "TupleTypeNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "UnionType",
        "type": "UnionTypeNode",
        "baseType": "TypeNode"
    },

    {
        "kind": "ParenthesizedType",
        "type": "ParenthesizedTypeNode",
        "baseType": "TypeNode"
    },

    {
        "name": "IdentifierOrBindingPattern",
        "type": "Identifier | BindingPattern",
        "visit": true,
        "types": "Identifier | BindingPattern"
    },
    {
        "type": "BindingPattern"
    },
    {
        "kind": "ObjectBindingPattern",
        "baseType": "BindingPattern",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "elements", "type": "BindingElement", "isNodeArray": true }
        ]
    },
    {
        "kind": "ArrayBindingPattern",
        "baseType": "BindingPattern",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "BindingPattern | Identifier",
        "children": [
            { "name": "elements", "type": "BindingElement", "isNodeArray": true }
        ]
    },
    {
        "kind": "BindingElement",
        "type": "BindingElement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "children": [
            { "name": "name", "type": "Identifier | BindingPattern" },
            { "name": "propertyName", "type": "Identifier", "optional": true },
            { "name": "initializer", "type": "Expression", "optional": true }
        ]
    },

    {
        "name": "Expression",
        "type": "Expression",
        "visit": true,
        "nodeTest": "isExpression"
    },
    {
        "name": "UnaryExpression",
        "type": "UnaryExpression",
        "baseType": "Expression",
        "visit": true,
        "nodeTest": "isUnaryExpression"
    },
    {
        "name": "LeftHandSideExpression",
        "type": "LeftHandSideExpression",
        "baseType": "UnaryExpression",
        "visit": true,
        "nodeTest": "isLeftHandSideExpression"
    },
    {
        "name": "TemplateLiteralOrTemplateExpression",
        "type": "LiteralExpression | TemplateExpression",
        "visit": true,
        "nodeTest": "isTemplateLiteralOrTemplateExpression",
        "types": "LiteralExpression | TemplateExpression"
    },

    {
        "kind": "ArrayLiteralExpression",
        "type": "ArrayLiteralExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "elements", "type": "Expression", "isNodeArray": true }
        ]
    },
    {
        "kind": "ObjectLiteralExpression",
        "type": "ObjectLiteralExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "properties", "type": "ObjectLiteralElement", "isNodeArray": true }
        ]
    },
    {
        "kind": "PropertyAccessExpression",
        "type": "PropertyAccessExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "expression", "type": "LeftHandSideExpression" },
            { "name": "name", "type": "Identifier" }
        ]
    },
    {
        "kind": "ElementAccessExpression",
        "type": "ElementAccessExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "expression", "type": "LeftHandSideExpression" },
            { "name": "argumentExpression", "type": "Expression" }
        ]
    },
    {
        "kind": "CallExpression",
        "type": "CallExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "expression", "type": "LeftHandSideExpression" },
            { "name": "arguments", "type": "Expression", "isNodeArray": true }
        ]
    },
    {
        "kind": "NewExpression",
        "type": "NewExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "expression", "type": "LeftHandSideExpression" },
            { "name": "arguments", "type": "Expression", "isNodeArray": true }
        ]
    },
    {
        "kind": "TaggedTemplateExpression",
        "type": "TaggedTemplateExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "tag", "type": "LeftHandSideExpression" },
            { "name": "template", "type": "LiteralExpression | TemplateExpression" }
        ]
    },
    {
        "name": "TypeAssertion",
        "kind": "TypeAssertionExpression",
        "type": "TypeAssertion",
        "baseType": "UnaryExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "UnaryExpression",
        "children": [
            { "name": "type", "type": "TypeNode", "readonly": true },
            { "name": "expression", "type": "UnaryExpression" }
        ]
    },
    {
        "kind": "ParenthesizedExpression",
        "type": "ParenthesizedExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "expression", "type": "Expression" }
        ]
    },
    {
        "name": "ExpressionOrBlock",
        "type": "Expression | Block",
        "visit": true,
        "types": "Expression | Block"
    },
    {
        "kind": "FunctionExpression",
        "type": "FunctionExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "modifiers": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression",
        "children": [
            { "name": "name", "type": "Identifier" },
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "body", "type": "Expression | Block" },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": true, "isModifiersArray": true, "readonly": true },
            { "name": "asteriskToken", "type": "Node", "optional": true, "readonly": true }
        ]
    },
    {
        "kind": "ArrowFunction",
        "type": "FunctionExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "body", "type": "Expression | Block" },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": true, "isModifiersArray": true, "readonly": true }
        ]
    },
    {
        "kind": "DeleteExpression",
        "type": "DeleteExpression",
        "baseType": "UnaryExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "UnaryExpression",
        "children": [
            { "name": "expression", "type": "UnaryExpression" }
        ]
    },
    {
        "kind": "TypeOfExpression",
        "type": "TypeOfExpression",
        "baseType": "UnaryExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "UnaryExpression",
        "children": [
            { "name": "expression", "type": "UnaryExpression" }
        ]
    },
    {
        "kind": "VoidExpression",
        "type": "VoidExpression",
        "baseType": "UnaryExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "UnaryExpression",
        "children": [
            { "name": "expression", "type": "UnaryExpression" }
        ]
    },
    {
        "kind": "AwaitExpression",
        "type": "AwaitExpression",
        "baseType": "UnaryExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "UnaryExpression",
        "children": [
            { "name": "expression", "type": "UnaryExpression" }
        ]
    },
    {
        "kind": "PrefixUnaryExpression",
        "type": "PrefixUnaryExpression",
        "baseType": "UnaryExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "UnaryExpression",
        "children": [
            { "name": "operator", "type": "SyntaxKind", "readonly": true },
            { "name": "operand", "type": "UnaryExpression" }
        ]
    },
    {
        "kind": "PostfixUnaryExpression",
        "type": "PostfixUnaryExpression",
        "baseType": "UnaryExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "UnaryExpression",
        "children": [
            { "name": "operator", "type": "SyntaxKind", "readonly": true },
            { "name": "operand", "type": "LeftHandSideExpression" }
        ]
    },
    {
        "kind": "BinaryExpression",
        "type": "BinaryExpression",
        "baseType": "Expression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Expression",
        "children": [
            { "name": "operator", "type": "SyntaxKind", "readonly": true },
            { "name": "left", "type": "Expression" },
            { "name": "right", "type": "Expression" }
        ]
    },
    {
        "kind": "ConditionalExpression",
        "type": "ConditionalExpression",
        "baseType": "Expression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Expression",
        "children": [
            { "name": "condition", "type": "Expression" },
            { "name": "whenTrue", "type": "Expression" },
            { "name": "whenFalse", "type": "Expression" }
        ]
    },
    {
        "kind": "TemplateExpression",
        "type": "TemplateExpression",
        "baseType": "LeftHandSideExpression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "LeftHandSideExpression | LiteralExpression | TemplateExpression",
        "children": [
            { "name": "head", "type": "LiteralExpression" },
            { "name": "templateSpans", "type": "TemplateSpan", "isNodeArray": true }
        ]
    },
    {
        "kind": "YieldExpression",
        "type": "YieldExpression",
        "baseType": "Expression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Expression",
        "children": [
            { "name": "expression", "type": "Expression" },
            { "name": "asteriskToken", "type": "Node", "optional": true, "readonly": true }
        ]
    },
    {
        "kind": "GeneratedLabel",
        "type": "GeneratedLabel",
        "children": [
            { "name": "label", "type": "Label" },
            { "name": "labelNumbers", "type": "number[]" }
        ]
    },
    {
        "kind": "SpreadElementExpression",
        "type": "SpreadElementExpression",
        "baseType": "Expression",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Expression",
        "children": [
            { "name": "expression", "type": "Expression" }
        ]
    },
    {
        "kind": "OmittedExpression",
        "baseType": "Expression",
        "visit": true,
        "shallow": true,
        "handler": true,
        "handlerType": "Expression",
        "children": [
        ]
    },

    {
        "kind": "TemplateSpan",
        "type": "TemplateSpan",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "children": [
            { "name": "expression", "type": "Expression" },
            { "name": "literal", "type": "LiteralExpression" }
        ]
    },

    {
        "name": "Statement",
        "type": "Statement",
        "visit": true
    },
    {
        "kind": "Block",
        "type": "Block",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Block",
        "children": [
            { "name": "statements", "type": "Statement", "isNodeArray": true }
        ]
    },
    {
        "kind": "VariableStatement",
        "type": "VariableStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "declarationList", "type": "VariableDeclarationList" }
        ]
    },
    {
        "kind": "EmptyStatement",
        "baseType": "Statement",
        "visit": true,
        "shallow": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
        ]
    },
    {
        "kind": "ExpressionStatement",
        "type": "ExpressionStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "expression", "type": "Expression" }
        ]
    },
    {
        "kind": "IfStatement",
        "type": "IfStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "expression", "type": "Expression" },
            { "name": "thenStatement", "type": "Statement" },
            { "name": "elseStatement", "type": "Statement", "optional": true }
        ]
    },
    {
        "kind": "DoStatement",
        "type": "DoStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "statement", "type": "Statement" },
            { "name": "expression", "type": "Expression" }
        ]
    },
    {
        "kind": "WhileStatement",
        "type": "WhileStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "expression", "type": "Expression" },
            { "name": "statement", "type": "Statement" }
        ]
    },
    {
        "kind": "ForStatement",
        "type": "ForStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "initializer", "type": "VariableDeclarationList | Expression" },
            { "name": "condition", "type": "Expression" },
            { "name": "iterator", "type": "Expression" },
            { "name": "statement", "type": "Statement" }
        ]
    },
    {
        "kind": "ForInStatement",
        "type": "ForInStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "initializer", "type": "VariableDeclarationList | Expression" },
            { "name": "expression", "type": "Expression" },
            { "name": "statement", "type": "Statement" }
        ]
    },
    {
        "kind": "ContinueStatement",
        "type": "BreakOrContinueStatement",
        "baseType": "Statement",
        "visit": true,
        "shallow": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "label", "type": "Identifier" }
        ]
    },
    {
        "kind": "BreakStatement",
        "type": "BreakOrContinueStatement",
        "baseType": "Statement",
        "visit": true,
        "shallow": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "label", "type": "Identifier" }
        ]
    },
    {
        "kind": "ReturnStatement",
        "type": "ReturnStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "expression", "type": "Expression" }
        ]
    },
    {
        "kind": "WithStatement",
        "type": "WithStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "expression", "type": "Expression" },
            { "name": "statement", "type": "Statement" }
        ]
    },
    {
        "kind": "SwitchStatement",
        "type": "SwitchStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "expression", "type": "Expression" },
            { "name": "clauses", "type": "CaseOrDefaultClause", "isNodeArray": true }
        ]
    },
    {
        "kind": "LabeledStatement",
        "type": "LabeledStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "label", "type": "Identifier" },
            { "name": "statement", "type": "Statement" }
        ]
    },
    {
        "kind": "ThrowStatement",
        "type": "ThrowStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "expression", "type": "Expression" }
        ]
    },
    {
        "kind": "TryStatement",
        "type": "TryStatement",
        "baseType": "Statement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "Statement",
        "children": [
            { "name": "tryBlock", "type": "Block" },
            { "name": "catchClause", "type": "CatchClause" },
            { "name": "finallyBlock", "type": "Block" }
        ]
    },
    {
        "kind": "DebuggerStatement",
        "baseType": "Statement",
        "visit": true,
        "handler": true,
        "shallow": true,
        "handlerType": "Statement",
        "children": [
        ]
    },
    {
        "kind": "VariableDeclaration",
        "type": "VariableDeclaration",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "children": [
            { "name": "name", "type": "Identifier | BindingPattern" },
            { "name": "initializer", "type": "Expression", "optional": true }
        ]
    },
    {
        "kind": "VariableDeclarationList",
        "type": "VariableDeclarationList",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "children": [
            { "name": "declarations", "type": "VariableDeclaration", "isNodeArray": true }
        ]
    },
    {
        "name": "VariableDeclarationListOrExpression",
        "type": "VariableDeclarationList | Expression",
        "visit": true,
        "handler": true,
        "types": "VariableDeclarationList | Expression"
    },
    {
        "kind": "FunctionDeclaration",
        "type": "FunctionDeclaration",
        "baseType": "Statement",
        "modifiers": true,
        "create": true,
        "update": true,
        "visit": true,
        "children": [
            { "name": "name", "type": "Identifier" },
            { "name": "parameters", "type": "ParameterDeclaration", "isNodeArray": true },
            { "name": "body", "type": "Block" },
            { "name": "typeParameters", "type": "TypeParameterDeclaration", "isNodeArray": true, "optional": true, "readonly": true },
            { "name": "type", "type": "TypeNode", "optional": true, "readonly": true },
            { "name": "modifiers", "type": "Node", "optional": true, "isModifiersArray": true, "readonly": true },
            { "name": "asteriskToken", "type": "Node", "optional": true, "readonly": true }
        ]
    },

    {
        "name": "CaseOrDefaultClause",
        "type": "CaseOrDefaultClause",
        "visit": "true",
        "types": "CaseClause | DefaultClause"
    },
    {
        "kind": "CaseClause",
        "type": "CaseClause",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "CaseOrDefaultClause",
        "children": [
            { "name": "expression", "type": "Expression" },
            { "name": "statements", "type": "Statement", "isNodeArray": true }
        ]
    },
    {
        "kind": "DefaultClause",
        "type": "DefaultClause",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "handlerType": "CaseOrDefaultClause",
        "children": [
            { "name": "statements", "type": "Statement", "isNodeArray": true }
        ]
    },
    {
        "kind": "CatchClause",
        "type": "CatchClause",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "children": [
            { "name": "name", "type": "Identifier" },
            { "name": "block", "type": "Block" }
        ]
    },

    {
        "name": "ObjectLiteralElement",
        "type": "ObjectLiteralElement",
        "visit": true,
        "nodeTest": "isObjectLiteralElement"
    },
    {
        "kind": "PropertyAssignment",
        "type": "PropertyAssignment",
        "baseType": "ObjectLiteralElement",
        "handlerType": "ObjectLiteralElement",
        "create": true,
        "update": true,
        "visit": true,
        "handler": true,
        "children": [
            { "name": "name", "type": "DeclarationName" },
            { "name": "initializer", "type": "Expression" }
        ]
    },
    {
        "kind": "ShorthandPropertyAssignment",
        "type": "ShorthandPropertyAssignment",
        "baseType": "ObjectLiteralElement",
        "handlerType": "ObjectLiteralElement",
        "visit": true,
        "handler": true,
        "shallow": true,
        "children": [
            { "name": "name", "type": "Identifier" }
        ]
    }
]
